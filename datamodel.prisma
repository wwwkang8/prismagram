type User {
  id: ID! @id
  avatar: String
    @default(
      value: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5vpNZQPBoqaH23kPlU_SVPYGB6kO1cGD_Gw&usqp=CAU"
    )
  userName: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User @relation(name: "PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Sogeting {
  id: ID! @id
  title: String!
  intro: String!
  questions: [Question!]! @relation(name:"SogetingQuestion")
  resumes: [Resume!]! @relation(name:"SogetingResume")
  user: User! @relation(name: "SogetingUser")
  count: Int! @default(value: 0)
}

type Resume {
  id: ID! @id
  questions: [Question!]! @relation(name:"ResumeQuestions")
  answers: [Answer!]! @relation(name:"ResumeAnswer")
  sogeting: Sogeting @relation(name:"SogetingResume")
  user: User! @relation(name:"ResumeWriter")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Question {
  id: ID! @id
  question: String!
  questioner: User! @relation(name:"Questioner")
  sogeting: Sogeting! @relation(name:"SogetingQuestion")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Answer {
  id: ID! @id
  answer: String!
  question: Question! @relation(name:"AnswerofQuestion")
  resume: Resume! @relation(name:"ResumeAnswer")
  answerer: User! @relation(name:"Answerer")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Match {
  id: ID! @id
  state: String!
  sogeting: Sogeting! @relation(name:"MatchOfSogeting")
  suggester: User! @relation(name:"Suggester")
  receiver: User! @relation(name:"Receiver")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}